@model Collaborate_lrn_Py.Models.CollaborativeTutorial

@{ 
    ViewBag.Title = "Collaborate";
}
<link rel="stylesheet" href="~/Content/collaborate.css" />
<link rel="stylesheet" href="~/Content/obsidian.css">
<script src="~/Scripts/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-7">
            <h3 align="center">@Model.Tutorial.Title <small>Author: @Html.DisplayFor(model => model.Tutorial.Educator.UserName)</small></h3>
            <hr />
            <div class="">
                    <pre class="instructions">@Html.DisplayFor(model => model.Tutorial.BodyText)</pre>

            </div>
        </div>

            <div class="col-md-3">
                <p>@Html.DisplayNameFor(model => model.Tutorial.CreationDate) @Html.DisplayFor(model => model.Tutorial.CreationDate)</p>

                <p>@Html.DisplayNameFor(model => model.Tutorial.Description): @Html.DisplayFor(model => model.Tutorial.Description)</p>
            </div>
            <div class="col-md-2">
                <p>@Html.DisplayNameFor(model => model.Tutorial.Difficulty): @Html.DisplayFor(model => model.Tutorial.Difficulty)</p>
                <p>@Html.DisplayNameFor(model => model.Tutorial.Votes): @Html.DisplayFor(model => model.Tutorial.Votes)</p>
                <p>
                    Collaborators:
                    @foreach (var c in Model.Collaborators)
                    {
                        @Html.DisplayFor(x => c.UserName)
                    }
                </p>
            </div>

        <div class="col-md-5">
            <h5>
                @Html.DisplayNameFor(model => model.Tutorial.CodeSample)
            </h5>

            <div>
                <pre class="pycode"><code class="python">@Html.DisplayFor(model => model.Tutorial.CodeSample)</code></pre>

            </div>
        </div>


    </div>
    <hr />
    <div class="col-md-7">
        <div>
            @foreach (var c in Model.Comments)
            {
                <div class="comment">
                    <p>@Html.DisplayFor(x => c.UserName)</p>
                    <p>@Html.DisplayFor(x => c.TimeStamp)</p>
                    <div style="background-color:#282b2e"><pre style="background-color:#282b2e;color:aliceblue">@Html.DisplayFor(x => c.Text)</pre></div>
                    <p>@Html.ActionLink(" ", "DeleteComment", new { id = c.Id, ctId = Model.Id }, new { @class = "btn btn-danger glyphicon glyphicon-remove" })</p>
                </div>
            }
        </div>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.TutorialId)
                <div class="form-group">
                    @Html.LabelFor(model => model.newComment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.newComment, new { htmlAttributes = new { @class = "form-control", @rows = 10 } })
                        @Html.ValidationMessageFor(model => model.newComment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add Comment" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-5 text-center">
        <p>
            @Html.ActionLink("Preview", "TakeTutorial", "Tutorials", new { id = Model.TutorialId }, new { @class = "btn btn-info" })
        </p>
        <p>
            @Html.ActionLink("Edit", "Edit", "Tutorials", new { id = Model.TutorialId }, new { @class = "btn btn-warning" })
        </p>
    </div>

</div>
