@model Collaborate_lrn_Py.Models.Quiz

@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    <h4>@ViewBag.Title</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Goal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Goal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Instruction)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Instruction)
        </dd>
    </dl>
    <script>
        function outf(text) {
            var mypre = document.getElementById("output");
            mypre.innerHTML = mypre.innerHTML + text;
        }
        function builtinRead(x) {
            if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
                throw "File not found: '" + x + "'";
            return Sk.builtinFiles["files"][x];
        }

        function runit() {
            var prog = document.getElementById("yourcode").value;
            var mypre = document.getElementById("output");
            isCorrect(prog, mypre);
            mypre.innerHTML = '';
            Sk.pre = "output";
            Sk.configure({ output: outf, read: builtinRead });
            (Sk.TurtleGraphics || (Sk.TurtleGraphics = {})).target = 'mycanvas';
            var myPromise = Sk.misceval.asyncToPromise(function () {
                return Sk.importMainWithBody("<stdin>", false, prog, true);
            });
            myPromise.then(function (mod) {
                console.log('success');
            },
                function (err) {
                    console.log(err.toString());
                });
        }
        function isCorrect(prog, outp) {
            console.log(outp);
            var stprog = prog.replace(/'/g, '');
            console.log(stprog);
            var correctOutput = "@Model.ExpectedOutput";
            if (stprog === correctOutput) {
                console.log("correct!")
                return true;
            }
            else {
                console.log("hm...")
                return false;
            }
        }
    </script>
    <h3>Try It:</h3>
    <p>Remember to use four spaces instead of tabs when indenting.</p>
    <form>
        <textarea id="yourcode" cols="80" rows="10">Write your code here.</textarea>
        <br />
        <button type="button" onclick="runit()">Run</button>
        <button type="button">Rate</button>
        <button type="button">Check</button>
    </form>
    <pre id="output"></pre>
    <!-- If you want turtle graphics include a canvas -->
    <div id="mycanvas"></div>
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
@*<script src="~/Scripts/browserpy.js" type="text/javascript"></script>*@
<div id="formSection">
    <h4>@ViewBag.Message</h4>
    @using (Ajax.BeginForm(
                    "Grade",
                    new AjaxOptions
                    {
                        UpdateTargetId = "result",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "post"
                    }))
    {
         <textarea name = "message" ></textarea>
         <input type = "submit"/>
         <div id = "result"> How'd you do?</div>
    }
</div>

@*<div id="forma">
    <h3>@ViewBag.Message</h3>
    <form method="post" id="contactForm">
        <textarea name="message" id="message"></textarea>
        <input type="submit" />
    </form>
</div>*@

@section scripts{

    @*<script>
        $('#contactForm'.submit(function () {
            $.post('', { message: $('#message').val() })
            .done(function (response) {
                $('#forma').html(response);
            });
            return false;
        }));
    </script>*@
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}
@*//$(function() {
    //    $('#checkCode').click(function(){
    //        var prog = document.getElementById("yourcode").value;
    //        }
    //    }*@